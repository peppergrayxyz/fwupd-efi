name: Run On Platform
description: setup platform (distro/arch) and run command

inputs:
  distro:     { type: string, default: 'alpine'}
  vendor:     { type: string, default: 'linux'}
  arch:       { type: string, default: 'x86_64'}
  image:      { type: string, default: 'alpine:latest'}
  features:   { type: string, default: 'base gnu py3pe gnuefi'}
  toolchain:  { type: string, default: ''}
  build_dir:  { type: string, default: 'build'}
  run:        { type: string, default: 'build'}

runs:
  using: "composite"
  steps:

  - name: Enable QEMU
    uses: docker/setup-qemu-action@v3
    with:
      platforms: all

  - name: Load install script
    id: ci_install
    uses: jaywcjlove/github-action-read-file@main
    with:
      path: contrib/ci_install.sh

  - name: Run CI inside ${{ inputs.image }}
    uses: uraimo/run-on-arch-action@v3
    with:
      arch: ${{ inputs.arch }}
      distro: ${{ inputs.distro }}
      base_image: |
        --platform=${{ inputs.vendor }}/${{ inputs.arch }} ${{ inputs.image }}
      dockerRunArgs: |
        --volume "${{ github.workspace }}:/${{ inputs.build_dir }}"
      #githubToken: ${{ github.token }}
      install: |         
        install() {
        ${{ steps.ci_install.outputs.content }}    
        }
        set -x
        [ "$(uname -m)" = "x86_64" ] && [ "${{ inputs.arch }}" = "i386" ] && export ARCH=i386
        mkdir -p "${PWD}/${{ inputs.build_dir }}"
        install "${{ inputs.distro }}" ${{ inputs.features }}
      env: |
        TOOLCHAIN: "${{ inputs.toolchain }}"
      run: |
        set -x
        [ "$(uname -m)" = "x86_64" ] && [ "${{ inputs.arch }}" = "i386" ] && export ARCH=i386
         ./contrib/ci_${{ inputs.run }}.sh ${{ inputs.build_dir }}
